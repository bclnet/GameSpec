**Centralized File Management: Navigating Paths, Ignores, and Filters**

Within the realm of efficient file management, a File Manager takes center stage, consolidating critical information such as Paths, Ignores, and Filters.

Paths, the navigational threads within game folders, are uncovered through meticulous exploration in specific directories, existing store managers, or the windows registry. The File Manager offers a set of methods designed to streamline this process:

- **getPathByDirectory:** Initiates a search for the game in specified folders within the /Games directory.
  
- **getPathByStoreKey:** Extends the search to game-specific store managers, encompassing a diverse range, including Blizzard, Epic, Gog, and Steam Store Managers.

- **getPathByRegistry Key:** Delves into the Windows Registry, scanning under key locations like HKEY_LOCAL_MACHINE/SOFTWARE, KEY_CURRENT_USER/SOFTWARE, and HKEY_CLASSES_ROOT/VirtualStore/MACHINE/SOFTWARE. When a registry key is identified, a directory is sought by probing into values such as Path, Install Dir, InstallDir, and InstallLocation. Alternatively, the directory location can be gleaned from values like Installed Path, ExePath, and Exe found within files.

In the intricate web of game folders, some games initiate from a sub-folder of the root game directory. Recognizing this diversity, games have the flexibility to specify additional paths, seamlessly amalgamating with the initially located root folder.

This comprehensive approach to centralized file management ensures that archivists and digital creators can navigate through the complexities of diverse game structures, optimizing their processes and fostering a more efficient and organized handling of game assets.
